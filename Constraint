REM DEFAULT OPTION
-- INSERT할 때 암시적으로 NULL이 들어가면 자동으로 대체될 값을 지정할 때 사용
-- DEFAULT 값은 해당 칼럼의 데이터타입과 일치해야 한다.

CREATE TABLE EMP_COPY10
(   EMPNO NUMBER(4),
    ENAME VARCHAR2(20),
    HIREDATE DATE DEFAULT SYSDATE,
    JOB VARCHAR2(50) DEFAULT 'DEVELOPER',
    SAL NUMBER(7) DEFAULT 800000
);

INSERT INTO EMP_COPY10 (EMPNO, ENAME)
VALUES(1111, '한지민'); -- 암시적으로 NULL 삽입

INSERT INTO EMP_COPY10 (EMPNO, ENAME, JOB)
VALUES(2222, '김지민', 'SALESEMAN');

INSERT INTO EMP_COPY10 (EMPNO, ENAME, JOB, HIREDATE)
VALUES(3333, '박지민', NULL, NULL);
-- JOB과 HIREDATE는 명시적으로 NULL을 넣었다.
-- 명시적으로 넣었기 때문에 DEFAULT OPTION이 적용되지 않는다.

SELECT* FROM EMP_COPY10;

CREATE TABLE MEMBER -- 테이블 복사, 구조만 복사, 테이블을 복사해서 생성하면 모든 제약조건이 삭제된다.
AS
SELECT EMPNO, ENAME
FROM EMP
WHERE 1=0;

-- 성별 컬럼을 추가하고 기본값을 여성으로 설정
ALTER TABLE MEMBER
ADD (GENDER NUMBER(1));

ALTER TABLE MEMBER
MODIFY (GENDER VARCHAR2(7) DEFAULT '여성');

ALTER TABLE MEMBER
ADD (GENDER VARCHAR2(7) DEFAULT '여성'); -- ADD, MODIFY 모두 가능

INSERT INTO MEMBER(EMPNO, ENAME)
VALUES (1111, '한지민');

INSERT INTO MEMBER(EMPNO, ENAME, GENDER)
VALUES (2222, '박지민', '남성');

INSERT INTO MEMBER(EMPNO, ENAME, GENDER)
VALUES (3333, '김지민', DEFAULT); -- 명시적으로 DEFAULT를 넣어도 가능

DESC MEMBER;
SELECT * FROM MEMBER;

DROP TABLE EMP_COPY10;
DROP TABLE MEMBER;

REM PRIMARY KEY
-- 1. COLUMN-LEVEL 제약 조건으로 생성하기
CREATE TABLE MEMBER(
    USERID CHAR(14) PRIMARY KEY,
    PASSWD VARCHAR2(20),
    NAME VARCHAR2(20),
    AGE NUMBER(2),
    CITY VARCHAR2(20) DEFAULT 'SEOUL'
);

SELECT TABLE_NAME FROM USER_TABLES;
DESC USER_CONSTRAINTS;
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME=UPPER('MEMBER');

REM 제약조건 이름 부여하기
-- 테이블 이름_컬럼이름_PK | UK | NN | FK | CK

-- COLUMN-LEVEL 제약조건으로 생성하기
CREATE TABLE MEMBER(
    USERID CHAR(14) CONSTRAINT MEMBER_USERID_PK PRIMARY KEY,
    PASSWD VARCHAR2(20),
    NAME VARCHAR2(20),
    AGE NUMBER(2),
    CITY VARCHAR2(20) DEFAULT 'SEOUL'
);

-- TABLE-LEVEL 제약조건으로 생성하기
CREATE TABLE MEMBER(
    USERID CHAR(14),
    PASSWD VARCHAR2(20),
    NAME VARCHAR2(20),
    AGE NUMBER(2),
    CITY VARCHAR2(20) DEFAULT 'SEOUL',
    CONSTRAINT MEMBER_USERID_PK PRIMARY KEY(USERID)
);

INSERT INTO MEMBER(USERID, PASSWD)
VALUES(1111, '12345');

INSERT INTO MEMBER(USERID, PASSWD)
VALUES (1111, '44444');

INSERT INTO MEMBER(USERID, PASSWD)
VALUES (NULL, '55555');


CREATE TABLE PRODUCT(
    PRODUCTID CHAR(7),
    NAME VARCHAR2(30),
    PRICE NUMBER(8) DEFAULT 0,
    PDATE DATE DEFAULT SYSDATE,
    MAKER VARCHAR2(20),
    CONSTRAINT PRODUCT_PRODUCTID_PK PRIMARY KEY(PRODUCTID)
);

-- 테이블 복사해서 테이블을 생성한 후, 새로 생성한 테이블에는 제약조건이 삭제됐으니,
-- 새로 제약조건을 추가하는 방법
CREATE TABLE EMP_COPY10
AS
SELECT EMPNO, ENAME, JOB, HIREDATE
FROM EMP
WHERE DEPTNO = 10;

ALTER TABLE EMP_COPY10
ADD CONSTRAINT EMP_COPY10_EMPNO_PK PRIMARY KEY (EMPNO);

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME=UPPER('EMP_COPY10');

SELECT *
FROM EMP_COPY10;

INSERT INTO EMP_COPY10 (EMPNO, ENAME)
VALUES (7782, '한지민');

-- 제약 조건 삭제는 이름으로
ALTER TABLE EMP_COPY10
DROP CONSTRAINT EMP_COPY10_EMPNO_pk;

-- NOT NULL 
-- ADD CONSTRAINT 절대 안됨.
ALTER TABLE EMP_COPY10
-- MODIFY (ENAME NOT NULL);
MODIFY ENAME CONSTRAINT EMP_COPY10_ENAME_NN NOT NULL;

CREATE TABLE PATIENT(
    BUNHO NUMBER(4), 
    NAME VARCHAR2(20) CONSTRAINT PATIENT_NAME_NN NOT NULL,
    CODE CHAR(2) CONSTRAINT PATIENT_CODE_NN NOT NULL,
    AGE NUMBER(3)CONSTRAINT PATIENT_AGE_NN NOT NULL,
    DAYS NUMBER(3) CONSTRAINT PATIENT_DAYS_NN NOT NULL,
    CONSTRAINT PATIENT_BUNHO_PK PRIMARY KEY(BUNHO)
);

CREATE TABLE DEPT_COPY
AS SELECT * FROM DEPT;

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='DEPT_COPY';
-- 테이블 복사는 제약 조건은 가져오지 못한다. 

ALTER TABLE DEPT_COPY
MODIFY LOC DEFAULT 'SEOUL'; -- DEFAULT 옵션 부여

ALTER TABLE DEPT_COPY
ADD CONSTRAINT DEPT_COPY_DEPTNO_PK PRIMARY KEY(DEPTNO); -- 기본 키 부여

ALTER TABLE DEPT_COPY
MODIFY DNAME CONSTRAINT DEPT_COPY_DNAME_NN NOT NULL; -- TABLE-LEVEL제약 조건만 가능

ALTER TABLE DEPT_COPY
MODIFY LOC CONSTRAINT DEPT_COPY_LOC_NN NOT NULL; -- TABLE-LEVEL제약 조건만 가능

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='DEPT_COPY';

DROP TABLE EMP_COPY10;

-- FOREIGN KEY

CREATE TABLE EMP_COPY
AS SELECT * FROM EMP;

CREATE TABLE DEPT_COPY
AS SELECT * FROM DEPT;

ALTER TABLE EMP_COPY -- 참조하는 테이블 : 자식 테이블
ADD CONSTRAINT EMP_COPY_EMPNO_PK PRIMARY KEY(EMPNO); -- 기본키 먼저 부여

ALTER TABLE DEPT_COPY -- 참조를 당하는 테이블 : 부모 테이블
ADD CONSTRAINT DEPT_COPY_DEPTNO_PK PRIMARY KEY(DEPTNO);

ALTER TABLE EMP_COPY
ADD CONSTRAINT EMP_COPY_DEPTNO_FK FOREIGN KEY(DEPTNO) 
REFERENCES DEPT_COPY(DEPTNO); -- 외래키 지정 방법
-- 자식은 부모의 기본키나 유일키를 참조할 수 있다.(외래키에 NULL 가능)

INSERT INTO EMP_COPY(EMPNO, ENAME, DEPTNO)
VALUES(8888,'한지민',50); -- 50부서번호 오류, 부모 키가 없다.

ALTER TABLE EMP_COPY
DROP CONSTRAINT EMP_COPY_DEPTNO_FK; -- 제약 조건 삭제

CREATE TABLE MEMBER(
    MEMBER_ID NUMBER(5),
    MEMBER_NAME VARCHAR2(20) CONSTRAINT MEMBER_MEMBER_NAME_NN NOT NULL,
    CONSTRAINT MEMBER_MEMBER_ID_PK PRIMARY KEY(MEMBER_ID)
);

CREATE TABLE PRODUCT(
    PRODUCT_ID NUMBER(5),
    PRODUCT_NAME VARCHAR2(30) CONSTRAINT PRODUCT_PRODUCT_NAME_NN NOT NULL,
    CONSTRAINT PRODUCT_PRODUCT_ID_PK PRIMARY KEY(PRODUCT_ID)
);

CREATE TABLE CART(
    CART_ID NUMBER(10),
    MEMBER_ID NUMBER(5) CONSTRAINT CART_MEMBER_ID_FK REFERENCES MEMBER(MEMBER_ID), --COLUMN-LEVEL
    PRODUCT_ID NUMBER(5),
    CONSTRAINT CART_CART_ID_PK PRIMARY KEY(CART_ID),
    CONSTRAINT CART_PRODUCT_ID_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) -- TABLE-LEVEL
);



INSERT INTO EMP1(EMPNO, ENAME, DEPTNO)
VALUES(1111, '한지민', 10); -- 부모부터 데이터를 넣어줘야 에러 안 남

INSERT INTO DEPT1(DEPTNO, DNAME, LOC)
VALUES(10, '개발팀','SEOUL');

DELETE FROM DEPT1
WHERE DEPTNO = 10; -- 자식데이터가 참조하고 있다면 삭제 불가



SELECT CONSTRAINT_TYPE, CONSTRAINT_NAME, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'EMP1';

ALTER TABLE EMP1
DROP CONSTRAINT FK_DEPT1_TO_EMP1;

ALTER TABLE EMP1
ADD CONSTRAINT EMP1_DEPTNO_FK FOREIGN KEY(DEPTNO) REFERENCES DEPT1(DEPTNO) ON DELETE CASCADE;
-- 부모 데이터 삭제시 참조하는 자식 데이터도 같이 삭제됨
SELECT * FROM EMP1;

REM ON DELETE SET NULL : 부모 데이터가 삭제되면 이를 참조하는 자식 테이블의 데이터를 삭제하지 않고 대신 NULL로 바꾼다.
INSERT INTO DEPT1(DEPTNO, DNAME, LOC)
VALUES(10, '개발팀','SEOUL');
INSERT INTO EMP1(EMPNO, ENAME, DEPTNO)
VALUES(1111, '한지민', 10);
ALTER TABLE EMP1
DROP CONSTRAINT EMP1_DEPTNO_FK;

ALTER TABLE EMP1
ADD CONSTRAINT EMP1_DEPTNO_FK FOREIGN KEY(DEPTNO) REFERENCES DEPT1(DEPTNO) ON DELETE SET NULL;

DELETE FROM DEPT1
WHERE DEPTNO = 10; -- 삭제 성공하며, 자식 테이블의 한지민의 부서번호가 NULL로 바뀐다.

SELECT * FROM EMP1;

-- UNIQUE
REM 부서 테이블의 부서명에 유일키(UNIQUE) 지정하기
ALTER TABLE DEPT1
ADD CONSTRAINT DEPT1_DNAME_UK UNIQUE(DNAME);

SELECT * FROM DEPT1;

INSERT INTO DEPT1
VALUES(10, '개발팀', 'SEOUL');
INSERT INTO DEPT1
VALUES(20, '총무팀', 'SEOUL');
INSERT INTO DEPT1
VALUES(30, '개발팀', 'BUSAN');

REM CHECK 제약조건 : 부서의 위치는 서울, 부산, 대전, 대구, 인천, 광주, 울산만 가능해야 한다.
ALTER TABLE DEPT1
ADD CONSTRAINT DEPT1_LOC_CK CHECK (LOC IN ('SEOUL','BUSAN','대구','인천','광주','울산','대전'));

INSERT INTO DEPT1
VALUES(30, '디자인팀', '대구');
INSERT INTO DEPT1
VALUES(40, '운영팀', '용인'); -- 에러

REM 제약조건 및 DEFAULT 옵션 복습
DROP TABLE STUDENT;
CREATE TABLE STUDENT(
    HAKBUN CHAR(7),
    NAME VARCHAR2(20) CONSTRAINT STUDENT_NAME_NN NOT NULL,
    MATH NUMBER(3) DEFAULT 0 CONSTRAINT STUDENT_MATH_NN NOT NULL,
    AGE NUMBER(3) DEFAULT 20 CONSTRAINT STUDENT_AGE_NN NOT NULL,
    SEQ NUMBER(5), -- 우편번호 테이블 참조
    CITY VARCHAR2(30),
    GENDER CHAR(1) DEFAULT '0',
    CONSTRAINT STUDENT_HAKBUN_PK PRIMARY KEY(HAKBUN),
    CONSTRAINT STUDENT_MATH_CK CHECK(MATH BETWEEN 0 AND 100),
    CONSTRAINT STUDENT_AGE_CK CHECK (AGE>19),
    CONSTRAINT STUDENT_CITY_CK CHECK (CITY IN('서울','부산','용인')),
    CONSTRAINT STUDENT_CITY_UK UNIQUE(CITY),
    CONSTRAINT STUDENT_GENDER_CK CHECK(GENDER IN('1','0')),
    CONSTRAINT STUDENT_SEQ_FK FOREIGN KEY(SEQ) REFERENCES ZIPCODE(SEQ)
);

SELECT CONSTRAINT_TYPE, CONSTRAINT_NAME, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'STUDENT';

INSERT INTO STUDENT (HAKBUN, NAME)
VALUES('2020-01', NULL);  --이름 NULL불가

INSERT INTO STUDENT (HAKBUN, NAME, MATH)
VALUES('2020-01', '한지민', 110);  -- 수학CHECK 위배
