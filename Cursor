DECLARE
    V_EMPNO EMP.EMPNO%TYPE;
    V_ENAME EMP.ENAME%TYPE;
    V_JOB EMP.JOB%TYPE;
    CURSOR MYCURSOR IS
    SELECT EMPNO, ENAME, JOB
    FROM EMP
    WHERE DEPTNO=10; -- 1. 선언부
BEGIN
    OPEN MYCURSOR; -- 2. OPEN
    LOOP
        FETCH MYCURSOR INTO V_EMPNO, V_ENAME, V_JOB;
        EXIT WHEN MYCURSOR%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(V_EMPNO || ' ' || V_ENAME || ' ' || V_JOB);
    END LOOP;
    CLOSE MYCURSOR; -- 4. CLOSE
END;

-- ACCEPT P_JOB PROMPT '어떤 직군을 검색하시겠습니까 ? : ';
-- DECLARE
CREATE OR REPLACE PROCEDURE SP_CURSOR_TEST
(
    V_JOB IN EMP.JOB%TYPE
)
IS
    V_ENAME EMP.ENAME%TYPE;
    V_DNAME DEPT.DNAME%TYPE;
    
    CURSOR MYCURSOR IS
    SELECT ENAME, DNAME
    FROM EMP INNER JOIN DEPT ON (EMP.DEPTNO = DEPT.DEPTNO)
    WHERE JOB = V_JOB; -- 1. 선언
BEGIN
    OPEN MYCURSOR; --2. OPEN
    LOOP
        FETCH MYCURSOR INTO V_ENAME, V_DNAME; --3. FETCH
        IF MYCURSOR%NOTFOUND THEN EXIT;
            EXIT;
        END IF;
        DBMS_OUTPUT.PUT_LINE(V_ENAME || ' ' || V_JOB || ' ' || V_DNAME);
    END LOOP;
    CLOSE MYCURSOR; -- 4. CLOSE
END;

CREATE OR REPLACE PROCEDURE SP_EMP_CURSOR
(
    V_DEPTNO IN EMP.DEPTNO%TYPE
)
IS
    CURSOR MYCURSOR IS
    SELECT EMPNO, ENAME,SAL
    FROM EMP
    WHERE DEPTNO = V_DEPTNO;
    V_TEMP EMP%ROWTYPE;
BEGIN
    FOR V_TEMP IN MYCURSOR LOOP
        IF MYCURSOR%NOTFOUND THEN EXIT;
        END IF;
        DBMS_OUTPUT.PUT_LINE(V_TEMP.EMPNO || ' ' || V_TEMP.ENAME || ' ' || V_TEMP.SAL);
    END LOOP;
END;

CREATE OR REPLACE PROCEDURE SP_MYCURSOR
IS
    CURSOR MYCURSOR IS
    SELECT DEPTNO, COUNT(SAL), TRUNC(AVG(SAL)), MAX(SAL), MIN(SAL)
    FROM EMP
    GROUP BY DEPTNO
    ORDER BY DEPTNO;
    V_DEPTNO EMP.DEPTNO%TYPE;
    V_CNTSAL NUMBER;
    V_AVGSAL NUMBER;
    V_MAXSAL NUMBER;
    V_MINSAL NUMBER;
BEGIN
    OPEN MYCURSOR;
    LOOP
        FETCH MYCURSOR INTO V_DEPTNO, V_CNTSAL, V_AVGSAL, V_MAXSAL, V_MINSAL;
        IF MYCURSOR%NOTFOUND THEN EXIT;
        END IF;
        DBMS_OUTPUT.PUT_LINE(V_DEPTNO || ' ' || V_CNTSAL || ' ' || V_AVGSAL || ' ' || V_MAXSAL || ' ' || V_MINSAL );    
    END LOOP;
    CLOSE MYCURSOR;
END;

CREATE OR REPLACE PROCEDURE SP_ZIPCODE_SELECT
(
    V_DONGNAME IN ZIPCODE.DONG%TYPE,
    V_RECORD OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN V_RECORD FOR 
    SELECT ZIPCODE, SIDO, GUGUN, DONG, BUNJI
    FROM ZIPCODE
    WHERE DONG LIKE CONCAT(CONCAT('%', V_DONGNAME), '%');
END;
