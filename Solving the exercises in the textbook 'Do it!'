-- 125p 1.
SELECT *
FROM emp
WHERE ename LIKE '%S';

-- 2.
SELECT empno, ename, job, sal, deptno
FROM emp
WHERE deptno=30 and job = 'SALESMAN';

-- 3. 
SELECT empno, ename, sal, deptno
FROM emp
WHERE deptno IN (20,30) AND sal>2000;

SELECT empno, ename, sal, deptno
FROM emp
WHERE deptno IN (20,30)
INTERSECT
SELECT empno, ename, sal, deptno
FROM emp
WHERE sal>2000;

-- 126p 4.
SELECT *
FROM emp
WHERE NOT (sal>=2000 AND sal<=3000);

-- 5.
SELECT ename, empno, sal, deptno
FROM emp
WHERE ename LIKE '%E%' AND deptno=30 AND sal NOT BETWEEN 1000 AND 2000;

-- 6. 
SELECT *
FROM emp
WHERE comm IS NULL AND mgr IS NOT NULL AND job IN ('MANAGER','CLERK')
INTERSECT
SELECT *
FROM emp
WHERE ename NOT LIKE '_L%';

-----------------------------------------------------------------------------

-- 174p. 1.
SELECT empno, RPAD(SUBSTR(empno, 1, 2), LENGTH(empno), '*') AS MASKING_EMPNO, ename, RPAD(SUBSTR(ename,1,1), LENGTH(ENAME), '*') AS MASKING_ENAME
FROM emp
WHERE LENGTH(ename)=5;

-- 2.
SELECT empno, ename, sal, TRUNC(sal / 21.5, 2) AS DAY_PAY, ROUND(sal / 21.5 / 8, 1) AS TIME_PAY
FROM emp;

-- 175p. 3.
ALTER SESSION
SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

SELECT empno, ename, hiredate, TO_CHAR(NEXT_DAY(ADD_MONTHS(hiredate, 3), '월요일'), 'YYYY-MM-DD') AS R_JOB, NVL(TO_CHAR(comm), 'N/A') AS comm
FROM emp;

-- 4.
SELECT empno, ename, mgr, CASE
                             WHEN mgr IS NULL THEN '0000'
                             WHEN mgr LIKE '75%' THEN '5555'
                             WHEN SUBSTR(mgr,1,2) = '76' THEN '6666'
                             WHEN mgr LIKE '77%' THEN '7777'
                             WHEN mgr LIKE '78%' THEN '8888'           
                             ELSE TO_CHAR(mgr)
                             END AS CHG_MGR
FROM emp;

---------------------------------------------------------------------------------------------------------------

-- 212p 1.
SELECT deptno, TRUNC(AVG(sal)) AS avg_sal, MAX(sal) as max_sal, MIN(sal) AS min_sal, count(*) AS cnt
FROM emp
GROUP BY deptno
ORDER BY deptno DESC;

-- 2.
SELECT job, count(*)
FROM emp
GROUP BY job
HAVING count(*) >= 3;

-- 3.
SELECT TO_CHAR(hiredate, 'YYYY') AS hire_year, deptno, count(*) AS cnt
FROM emp
GROUP BY TO_CHAR(hiredate, 'YYYY'), deptno;

-- 213p 4.
SELECT NVL2(comm, 'O', 'X') AS exist_comm, COUNT(*) AS CNT
FROM emp
GROUP BY NVL2(comm, 'O', 'X');

-- 5.
SELECT deptno, TO_CHAR(hiredate, 'YYYY') AS hire_year, COUNT(*) AS CNT, 
MAX(sal) AS max_Sal, SUM(sal) AS sum_sal, ROUND(AVG(sal), 11) AS avg_sal
FROM emp
GROUP BY ROLLUP (deptno, TO_CHAR(hiredate, 'YYYY'));

----------------------------------------------------------------------------------------------------------------

-- 239p 1.
-- SQL-99 이전 방식
SELECT D.deptno, D.dname, E.empno, E.ename, E.sal
FROM emp E, dept D
WHERE E.deptno=D.deptno AND E.sal>2000;
-- SQL-99방식
SELECT deptno, D.dname, E.empno, E.ename, E.sal
FROM emp E JOIN dept D USING(deptno)
WHERE E.sal>2000;

-- 2.
-- SQL-99 이전 방식
SELECT D.deptno,D.dname, TRUNC(AVG(E.sal)) AS AVG_SAL, MAX(E.sal) AS MAX_SAL, MIN(E.sal) AS MIN_SAL, COUNT(*) AS CNT
FROM dept D, emp E
WHERE E.deptno=D.deptno
GROUP BY D.deptno, D.dname
ORDER BY D.deptno;
-- SQL-99방식
SELECT D.deptno, D.dname, TRUNC(AVG(E.sal)) AS AVG_SAL, MAX(E.sal) AS MAX_SAL, MIN(E.sal) AS MIN_SAL, COUNT(*) AS CNT
FROM dept D JOIN emp E ON(E.deptno=D.deptno)
GROUP BY D.deptno, D.dname
ORDER BY D.deptno;

-- 3.
-- SQL-99 이전 방식
SELECT D.deptno, D.dname, E.empno, E.ename, E.job, E.sal
FROM emp E, dept D
WHERE E.deptno(+)=D.deptno
ORDER BY D.deptno, E.ename;
-- SQL-99방식
SELECT D.deptno, D.dname, E.empno, E.ename, E.job, E.sal
FROM emp E RIGHT OUTER JOIN dept D ON(E.deptno=D.deptno)
ORDER BY D.deptno, E.ename;

-- 240p 4.
-- SQL-99 이전 방식
SELECT D.deptno, D.dname, E.empno, E.ename, E.mgr, E.sal, E.deptno, S.losal, S.hisal, S.grade, E2.empno AS MGR_EMPNO, E2.ename AS MGR_ENAME
FROM emp E, dept D, salgrade S, emp E2
WHERE D.deptno = E.deptno(+) AND E.sal BETWEEN S.losal(+) AND S.hisal(+) AND E.mgr=E2.empno(+)
ORDER BY D.deptno, E.empno;
-- SQL-99방식
SELECT D.deptno, D.dname, E.empno, E.ename, E.mgr, E.sal, E.deptno, S.losal, S.hisal, S.grade, E2.empno AS MGR_EMPNO, E2.ename AS MGR_ENAME
FROM emp E RIGHT OUTER JOIN dept D ON(D.deptno = E.deptno) LEFT OUTER JOIN salgrade S ON (E.sal BETWEEN S.losal AND S.hisal) LEFT OUTER JOIN emp E2 ON(E.mgr=E2.empno)
ORDER BY D.deptno, E.empno;

--------------------------------------------------------------------------------------------------------------

-- 262p 1.
SELECT E.job, E.empno, E.ename, E.sal, D.deptno, D.dname
FROM emp E, dept D
WHERE E.deptno = D.deptno AND job = (SELECT job FROM emp WHERE ename = 'ALLEN');

-- 2.
SELECT E.empno, E.ename, D.dname, E.hiredate, D.loc, E.sal, S.grade
FROM emp E, dept D, salgrade S
WHERE E.deptno = D.deptno AND sal BETWEEN S.losal AND S.hisal AND sal > (SELECT AVG(sal) FROM emp)
ORDER BY E.sal DESC, e.empno ASC;

-- 263p 3.
SELECT E.empno, E.ename, E.job, D.deptno, D.dname, D.loc
FROM emp E, dept D
WHERE E.deptno = D.deptno AND E.deptno = 10 AND job NOT IN (SELECT job FROM emp WHERE deptno=30);

-- 4.
-- 다중행 함수 사용하지 않는 방법
SELECT E.empno, E.ename, E.sal, S.grade
FROM emp E, salgrade S
WHERE E.sal BETWEEN S.losal AND S.hisal AND E.sal > (SELECT MAX(sal) FROM emp WHERE job='SALESMAN')
ORDER BY E.empno ASC;

--다중행 함수 사용하는 방법
SELECT E.empno, E.ename, E.sal, S.grade
FROM emp E, salgrade S
WHERE E.sal BETWEEN S.losal AND S.hisal AND E.sal > ALL (SELECT sal FROM emp WHERE job='SALESMAN')
ORDER BY E.empno ASC;

----------------------------------------------------------------------------------------------------

-- 287p 1.
-- CREATE TABLE CHAP10HW_EMP AS SELECT * FROM EMP;
-- CREATE TABLE CHAP10HW_DEPT AS SELECT * FROM DEPT;
-- CREATE TABLE CHAP10HW_SALGRADE AS SELECT * FROM SALGRADE;
INSERT INTO CHAP10HW_DEPT(DEPTNO, DNAME, LOC)
VALUES(50, 'ORACLE', 'BUSAN');
INSERT INTO CHAP10HW_DEPT(DEPTNO, DNAME, LOC)
VALUES(60, 'SQL', 'ILSAN');
INSERT INTO CHAP10HW_DEPT(DEPTNO, DNAME, LOC)
VALUES(70, 'SELECT', 'INCHEON');
INSERT INTO CHAP10HW_DEPT(DEPTNO, DNAME, LOC)
VALUES(80, 'DML', 'BUNDANG');

SELECT * FROM CHAP10HW_DEPT;

-- 2.
INSERT INTO CHAP10HW_EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES (7201, 'TEST_USER1', 'MANAGER', 7788, TO_DATE(20160102,'YYYYMMDD'), 4500, NULL, 50);
INSERT INTO CHAP10HW_EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES (7202, 'TEST_USER2', 'CLERK', 7201, TO_DATE(20160201,'YYYYMMDD'), 1800, NULL, 50);
INSERT INTO CHAP10HW_EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES (7203, 'TEST_USER3', 'ANALYST', 7201, TO_DATE(20160411,'YYYYMMDD'), 3400, NULL, 60);
INSERT INTO CHAP10HW_EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES (7204, 'TEST_USER4', 'SALESMAN', 7201, TO_DATE(20160531,'YYYYMMDD'), 2700, 300, 60);
INSERT INTO CHAP10HW_EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES (7205, 'TEST_USER5', 'CLERK', 7201, TO_DATE(20160720,'YYYYMMDD'), 2600, NULL, 70);
INSERT INTO CHAP10HW_EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES (7206, 'TEST_USER6', 'CLERK', 7201, TO_DATE(20160908,'YYYYMMDD'), 2600, NULL, 70);
INSERT INTO CHAP10HW_EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES (7207, 'TEST_USER7', 'LECTURER', 7201, TO_DATE(20161028,'YYYYMMDD'), 2300, NULL, 80);
INSERT INTO CHAP10HW_EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES (7208, 'TEST_USER8', 'STUDENT', 7201, TO_DATE(20160309,'YYYYMMDD'), 1200, NULL, 80);

SELECT * FROM CHAP10HW_EMP;

--288p 3.
UPDATE CHAP10HW_EMP
SET DEPTNO = 70
WHERE SAL > (SELECT AVG(SAL) FROM CHAP10HW_EMP WHERE DEPTNO = 50);

SELECT * FROM CHAP10HW_EMP ORDER BY DEPTNO ASC;

-- 4.
UPDATE CHAP10HW_EMP
SET SAL = SAL * 1.1, DEPTNO = 80
WHERE HIREDATE > (SELECT MIN(HIREDATE) FROM CHAP10HW_EMP WHERE DEPTNO = 60);

SELECT * FROM CHAP10HW_EMP ORDER BY DEPTNO ASC;

-- 5.
DELETE FROM CHAP10HW_EMP
WHERE EMPNO IN(SELECT E.EMPNO
                FROM CHAP10HW_EMP E, CHAP10HW_SALGRADE S
                WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL AND S.GRADE=5)

SELECT * FROM CHAP10HW_EMP;

------------------------------------------------------------------------------------------------------

-- 324p 1.
CREATE TABLE EMP_HW(
    EMPNO NUMBER(4),
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    MGR NUMBER(4),
    HIREDATE DATE,
    SAL NUMBER(7,2),
    COMM NUMBER(7,2),
    DEPTNO NUMBER(2)
);

SELECT TABLE_NAME FROM USER_TABLES
WHERE TABLE_NAME = UPPER('EMP_HW');

-- 2.
ALTER TABLE EMP_HW
ADD BIGO VARCHAR2(20);

-- 3.
ALTER TABLE EMP_HW
MODIFY BIGO VARCHAR2(30);

-- 4.
ALTER TABLE EMP_HW
RENAME COLUMN BIGO TO REMARK;

--325p 5. 
INSERT INTO EMP_HW
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, NULL FROM EMP;

SELECT * FROM EMP_HW;

-- 6.
DROP TABLE EMP_HW;

------------------------------------------------------------------------------------------------------

-- 357p 1.
CREATE TABLE EMPIDX
AS
SELECT *
FROM EMP;

CREATE INDEX IDX_EMPIDX_EMPNO
ON EMPIDX(EMPNO);

SELECT INDEX_NAME, TABLE_NAME
FROM USER_INDEXES
WHERE INDEX_NAME = UPPER('IDX_EMPIDX_EMPNO');

-- 2.
CREATE OR REPLACE VIEW EMPIDX_OVER15K
AS
SELECT EMPNO, ENAME, JOB, DEPTNO, SAL, NVL2(COMM, 'O', 'X') AS COMM
FROM EMPIDX
WHERE SAL>1500;

-- 358p 3.
CREATE TABLE DEPTSEQ
AS
SELECT *
FROM DEPT;

CREATE SEQUENCE SEQ_DEPTSEQ
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 99
    MINVALUE 1
    NOCYCLE
    NOCACHE;

INSERT INTO DEPTSEQ (DEPTNO, DNAME, LOC)
VALUES (SEQ_DEPTSEQ.NEXTVAL, 'DATABASE', 'SEOUL' );
INSERT INTO DEPTSEQ (DEPTNO, DNAME, LOC)
VALUES (SEQ_DEPTSEQ.NEXTVAL, 'WEB', 'BUSAN' );
INSERT INTO DEPTSEQ (DEPTNO, DNAME, LOC)
VALUES (SEQ_DEPTSEQ.NEXTVAL, 'MOBILE', 'ILSAN' );

SELECT *
FROM DEPTSEQ;


------------------------------------------------------------------------------------------------------

-- 394p 1~3.
CREATE TABLE DEPT_CONST(
    DEPTNO NUMBER(2),
    DNAME VARCHAR2(14),
    LOC VARCHAR2(13) CONSTRAINT DEPTCONST_LOC_NN NOT NULL,
    CONSTRAINT DEPTCONST_DEPTNO_PK PRIMARY KEY (DEPTNO),
    CONSTRAINT DEPTCONST_DNAME_UNQ UNIQUE (DNAME)
);

CREATE TABLE EMP_CONST(
    EMPNO NUMBER(4),
    ENAME VARCHAR2(10) CONSTRAINT EMPCONST_ENAME_NN NOT NULL,
    JOB VARCHAR2(9),
    TEL VARCHAR2(20),
    HIREDATE DATE,
    SAL NUMBER(7,2),
    COMM NUMBER(7,2),
    DEPTNO NUMBER(2), -- CONSTRAINT EMPCONST_DEPTNO_FK REFERENCES DEPT_CONST(DEPTNO)
    CONSTRAINT EMPCNOST_EMPNO_PK PRIMARY KEY (EMPNO),
    CONSTRAINT EMPCNOST_TEL_UNQ UNIQUE (TEL),
    CONSTRAINT EMPCNOST_SAL_CHK CHECK (SAL BETWEEN 1000 AND 9999),
    CONSTRAINT EMPCONST_DEPTNO_FK FOREIGN KEY(DEPTNO) REFERENCES DEPT_CONST(DEPTNO)
);

SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN('DEPT_CONST','EMP_CONST')
ORDER BY CONSTRAINT_NAME;


