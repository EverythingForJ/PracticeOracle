Rem Date : 2020년 8월 27일
Rem Author : 김준환
--Objective : Basic SQL과 Oracle 함수 학습하기
--Environment : Windows 10, Oracle SQL Developer, Oracle Database 19c Enterprise Ed.

SELECT ename, job
FROM emp
-- WHERE job IN('MANAGER', 'ANALYST', 'CLERK');
WHERE job NOT IN('MANAGER', 'ANALYST', 'CLERK');


SELECT empno, ename, sal, mgr
FROM emp
WHERE mgr IN(7902, 7566, 7788);

SELECT ename
FROM emp
WHERE deptno IN(10,20);

SELECT dname
FROM dept
WHERE deptno IN(10,20);


-- 1. BETWEEN A AND B
-- a가 b보다 항상 작아야한다.
-- 이상,이하이므로 초과,미만은 사용할 수 없다.
-- NOT을 쓸 때 유리해진다.
SELECT ename, job, sal
FROM emp
--WHERE sal >= 1300 AND sal <= 1500;
WHERE sal BETWEEN 1300 AND 1500;
--WHERE sal BETWEEN 1500 AND 1300;



-- 날짜 형식 다루기
-- DATE형식은 항상 NLS_DATE_FORMAT 형식에 맞춰야 한다.

-- 현재타입 보기
SELECT parameter, value FROM NLS_SESSION_PARAMETERS;

-- 2. 날짜형식 바꾸기
ALTER SESSION
SET NLS_DATE_FORMAT='YYYY-MM-DD';

SELECT hiredate
FROM emp
WHERE deptno = 10;


-- 1987년에 입사한 사원의 사번, 이름, 입사날짜를 출력하시오.
ALTER SESSION
SET NLS_DATE_FORMAT='YYYY-MM-DD';
SELECT ename, hiredate
FROM emp
-- WHERE hiredate >= '1987-01-01' AND hiredate <= '1987-12-31'; -- 1번째방법
-- WHERE hiredate BETWEEN '1987-01-01' AND '1987-12-31'; -- 2번째방법
WHERE hiredate LIKE '1987%'; -- 3번째방법

-- 3. LIKE 연산자, WHILDCARD : %,_
SELECT ename
FROM emp
--WHERE ename LIKE 'S%'; -- = 대신like를 사용한다. 글자수 모를땐 편하게
WHERE ename LIKE 'S____'; -- '_'가 4개

SELECT ename,job
FROM emp
--WHERE job LIKE 'ANA%'; -- '_'가 4개
--WHERE job LIKE '%ST';
--WHERE job LIKE 'A%ST'; -- %의 위치는 어디던 가능하다.
--WHERE job LIKE '%S%';
WHERE job LIKE '_L%';


-- zipcode table 추가했다.
SELECT COUNT(*) FROM zipcode;

DESC zipcode;

SELECT *
FROM zipcode
--WHERE dong = '역삼동';
WHERE dong LIKE '%개포%';



-- SELECT  *
-- FROM    emp
-- WHERE   comm IS NOT NULL;


-- SELECT  *
-- FROM    emp
-- WHERE   mgr IS NULL;


-- SELECT *
-- FROM    emp
-- ORDER BY comm DESC ;

-- CREATE TABLE emp10
-- AS
-- SELECT * FROM EMP
-- WHERE deptno = 10;

-- CREATE TABLE emp20
-- AS
-- SELECT * FROM EMP
-- WHERE deptno = 20;

-- SELECT * FROM EMP10; --3명
-- SELECT * FROM EMP20; -- 5명

-- -- 합집합 UNION
-- CREATE TABLE emp_1020
-- AS
-- SELECT empno, ename, deptno
-- FROM EMP10
-- UNION
-- SELECT empno, ename, deptno
-- FROM EMP20;

-- CREATE TABLE emp_clerk
-- AS SELECT * FROM emp
-- WHERE job='CLERK';

-- CREATE TABLE emp_maneger
-- AS SELECT * FROM emp
-- WHERE job='MANAGER';

-- CREATE TABLE emp_tf
-- AS
-- SELECT empno, ename, job
-- FROM emp_clerk
-- UNION
-- SELECT empno, ename, job
-- FROM emp_maneger;


-- --차집합 MINUS
-- SELECT ename, job
-- FROM emp -- 14명
-- MINUS
-- SELECT ename, job
-- FROM emp_clerk; -- 4명

-- -- 교집합 INTERSECT
-- SELECT ename, job
-- FROM emp -- 14명
-- INTERSECT
-- SELECT ename, job
-- FROM emp_clerk; -- 4명

-- 125p 실습
SELECT *
FROM emp
WHERE ename LIKE '%S';

SELECT empno, ename, job, sal, deptno
FROM emp
WHERE deptno = 30 and job = 'SALESMAN';

SELECT empno,ename,sal,deptno
FROM emp
WHERE deptno IN(20,30) and sal > 2000;

SELECT empno,ename,sal,deptno
FROM emp
WHERE deptno IN(20,30)
INTERSECT
SELECT empno,ename,sal,deptno
FROM emp
WHERE sal > 2000;

SELECT *
FROM emp
WHERE sal < 2000 OR sal > 3000;

SELECT ename, empno,sal,deptno
FROM emp
WHERE deptno = 30 and ename LIKE '%E%' and sal NOT BETWEEN 1000 AND 2000;

SELECT *
FROM emp
WHERE comm IS NULL and mgr IS NOT NULL
INTERSECT
SELECT *
FROM emp
WHERE job IN('MANAGER', 'CLERK') and ename NOT LIKE '_L%';

ALTER SESSION
SET NLS_DATE_FORMAT='YYYY-MM-DD';
SELECT empno, ename, hiredate
FROM emp
WHERE hiredate > '1983-12-31';

SELECT empno, ename, comm
FROM emp
WHERE comm IS NULL;

-- 실습 끝

-- 단일 행 함수 다루기
-- 1. 문자 함수 다루기

SELECT *
FROM emp
--WHERE job = UPPER('salesman');
WHERE LOWER('JOB') = 'SALESMAN';

SELECT UPPER('hello, world'), LOWER('hello, world'), INITCAP('hello, world')
FROM dual;

--SELECT LOWER(ename)
SELECT INITCAP(ename)
FROM emp
WHERE job='SALESMAN';

-- length는 바이트수가 아닌 글자의 개수, LENGTHB는 바이트수
-- SELECT LENGTH('scott'),LENGTH('안녕하세요')
SELECT LENGTHB('scott'),LENGTHB('안녕하세요')
FROM dual;

SELECT parameter, value
FROM NLS_SESSION_PARAMETERS;

SELECT ename
FROM emp
WHERE LENGTH(ename) > 5;

-- SUBSTR() 인덱스가 아닌 1번째글자부터 3번째글자까지 출력
-- SELECT job, SUBSTR(job, 1,3)
SELECT job, SUBSTR(job, 3) -- 3번째부터 끝까지
FROM emp;

-- 1987년에 입사한 사원의 사번, 이름, 입사날짜를 출력하시오.
ALTER SESSION
SET NLS_DATE_FORMAT='YYYY-MM-DD';

SELECT ename, hiredate
FROM emp
-- WHERE hiredate >= '1987-01-01' AND hiredate <= '1987-12-31'; -- 1번째방법
-- WHERE hiredate BETWEEN '1987-01-01' AND '1987-12-31'; -- 2번째방법
-- WHERE hiredate LIKE '1987%'; -- 3번째방법
WHERE SUBSTR(hiredate, 1, 4) = 1987; -- 4번째 방법


--이름이 B와 J사이의 모든 사원 정보 출력
SELECT *
FROM emp
WHERE SUBSTR(ename,1,1) BETWEEN 'B' AND 'J';

-- INSTR 지정된 문자열의 위치를 숫자로 반환
SELECT ename, LENGTH(ename), UPPER(ename), SUBSTR(ename, 1, 3), INSTR(ename, 'A')
FROM emp
WHERE deptno = 20;

-- CONCAT() : 두문자열 합치는 함수
SELECT *
FROM zipcode
-- WHERE dong LIKE '%개포%';
-- WHERE dong LIKE CONCAT(CONCAT('%', '개포'); -- 개포로 끝나는게 없어서 결과 아무것도 안나옴
WHERE dong LIKE CONCAT(CONCAT('%', '개포'), '%');

-- TRIM
SELECT 'aaHelloaa', LTRIM('aaHelloaa', 'a'), RTRIM('aaHelloaa', 'a')
-- SELECT TRIM(BOTH 'a' FROM 'aaHelloaa')
-- SELECT TRIM(LEADING 'a' FROM 'aaHelloaa')
-- SELECT TRIM(TRAILING 'a' FROM 'aaHelloaa')
FROM dual;

-- CHR(10) : 줄바꿈 아스키코드 = 10
--f5로 실행
SELECT  'Hello' || ', World' || CHR(10) || CHR(36) || 'Oralce Programing'
FROM dual;
-- CHR 숫자에 맞는 ASCII문자 출력
-- ASCII 해당 ASCII로 변환


-- GREATEST 주어진 단어 중 가장 높은 값
-- LEAST 가장 낮은 값
SELECT GREATEST('한지민', '김지민'), LEAST('한지민', '김지민')
FROM dual;
-- 글씨도 크다, 작다가 가능하다.
